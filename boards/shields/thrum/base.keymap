#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define DEF 0
#define NAV 1
#define SYM 2
#define NUM 3

/* Mod Sequence (Outer to Inner) */
#define M0 LGUI
#define M1 LALT
#define M2 LCTRL
#define M3 LSHFT

/* Shortcuts */
#define CUT LC(X)
#define COP LC(C)
#define PST LC(V)
#define UNDO LC(Z)
#define ALL LC(A)
#define TOP LC(HOME)
#define BOTTOM LC(END)
#define SWIN LA(TAB)
#define STAB LC(TAB)
#define KWIN LA(F4)
#define KTAB LC(W)
#define RSTO LC(LS(T))

/* More keys */
#define REP &key_repeat
#define COM KP_COMMA
#define SPC SPACE

/ {
    behaviors {
        home: home_ignoring_ctrl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp HOME>, <&kp HOME>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        end: end_ignoring_ctrl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp END>, <&kp END>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        bspc: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        plus: plus_zoom {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp LC(EQUAL)>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NAV SYM>;
            then-layer = <NUM>;
        };
    };

    combos {
        compatible = "zmk,combos";

        /*                 Key Positions
             0   1   2   3   4      5   6   7   8   9
            10  11  12  13  14     15  16  17  18  19
                20  21  22             23  24  25
                        26  27     28  29              */

        j { key-positions = <1 2>; bindings = <&kp J>; layers = <ALPHAS>; };
        q { key-positions = <2 3>; bindings = <&kp Q>; layers = <ALPHAS>; };
        z { key-positions = <20 21>; bindings = <&kp Z>; layers = <ALPHAS>; };

        lpar { key-positions = <3 13>; bindings = <&kp LPAR>; layers = <ALPHAS SYMBOLS NUMBERS>; };
        rpar { key-positions = <6 16>; bindings = <&kp RPAR>; layers = <ALPHAS SYMBOLS NUMBERS>; };
        lbrc { key-positions = <2 12>; bindings = <&kp LBRC>; layers = <ALPHAS SYMBOLS NUMBERS>; };
        rbrc { key-positions = <7 17>; bindings = <&kp RBRC>; layers = <ALPHAS SYMBOLS NUMBERS>; };
        lbkt { key-positions = <1 11>; bindings = <&kp LBKT>; layers = <ALPHAS SYMBOLS NUMBERS>; };
        rbkt { key-positions = <8 18>; bindings = <&kp RBKT>; layers = <ALPHAS SYMBOLS NUMBERS>; };
    };

/ {
    keymap {
        compatible = "zmk,keymap";

        def_layer {
            display-name = "DEF";
            bindings = <
                &mt M0 V &kp L    &kp H    &kp K    &kp W    &kp P    &kp F    &kp O    &kp U    &mt M0 SQT
                &kp S    &mt M1 R &mt M2 N &mt M3 T &kp B    &kp Y    &mt M2 C &mt M1 A &mt M0 E &kp I
                         &kp X    &kp M    &kp D   				      &kp G    &kp COM  &kp DOT
                                           &mo 1	REP      &kp SPC  &mo 2
            >;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
                &kp SWIN &kp STAB &kp KWIN &kp KTAB &kp RSTO &kp PG_UP &kp END  &kp UP   &kp HOME  &kp DEL
                &kp M0   &kp M1   &kp M2   &kp M3   &none    &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp RET
                         &kp CUT  &kp COP  &kp PST                     &kp BSPC &kp TAB  &trans
                                           &trans   &trans   &trans    &mo 3
            >;  
        };

        sym {
            status = "reserved";
        };
        
        num_layer {
            status = "reserved";

        };    
        blt {
            display-name = "BLT";
            bindings = <
                &none   &none   &bootloader &none  &none   &none   &none  &bootloader &none   &none
                &none   &none   &bt BT_CLR  &none           &none	&none   &none           &bt BT_CLR    &none   &none
                        &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0  &bt BT_SEL 0           &bt BT_SEL 1    &bt BT_SEL 2 
                                               &none           &none		&none           &none
            >;
        };

        };
        pad {
            status = "reserved";
        };
           
        func {
            status = "reserved";
        };
            
        macro {
            status = "reserved";
        };
    };
};